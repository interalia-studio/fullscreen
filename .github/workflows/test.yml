name: "test"

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  cargo_manifest: src-tauri/Cargo.toml

jobs:
  tauri:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'

    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - name: Restore from Node cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Restore from Cargo cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Tauri dependencies (Ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

    - name: Install js dependencies
      run: npm ci
      
    - name: Build app
      run: npm run build

    - name: Run Tauri action
      uses: tauri-apps/tauri-action@v0
      with:
        configPath: "src-tauri/tauri.conf.json"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  types:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'

    - name: Get npm cache directory
      id: npm-cache-dir
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - name: Restore from Node cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.npm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install js dependencies
      run: npm ci

    - name: Run Typescript compiler
      run: npm run check

